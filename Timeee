import pandas as pd
import win32com.client

# Load the Excel file into a DataFrame
df = pd.read_excel('your_excel_file.xlsx')

# Calculate the deviation and filter rows with deviation > 15%
df['Deviation'] = ((df['Present'] - df['Past']) / df['Past']) * 100
filtered_df = df[df['Deviation'] > 15]

# Create a proper-looking table with the 3 columns
filtered_df = filtered_df[['Past', 'Present', 'Deviation']]

# Attach the DataFrame to an Outlook email
outlook = win32com.client.Dispatch('Outlook.Application')
mail = outlook.CreateItem(0)
mail.Subject = 'Filtered Data Report'
mail.Body = 'Please find the attached filtered data.'
mail.Attachments.Add('filtered_data.xlsx')
mail.To = 'recipient@email.com'
mail.Send()

print("Email sent with the filtered data.")






import pandas as pd
import win32com.client

# Load the Excel file into a DataFrame
df = pd.read_excel('your_excel_file.xlsx')

# Calculate the deviation and filter rows with deviation > 15%
df['Deviation'] = ((df['Present'] - df['Past']) / df['Past']) * 100
filtered_df = df[df['Deviation'] > 15]

# Create an HTML table
html_table = filtered_df.to_html(index=False)

# Create an Outlook email
outlook = win32com.client.Dispatch('Outlook.Application')
mail = outlook.CreateItem(0)
mail.Subject = 'Filtered Data Report'
mail.HTMLBody = f"<p>Please find the attached table:</p>{html_table}"
mail.To = 'recipient@email.com'
mail.Send()

print("Email sent with the filtered data table.")



import pandas as pd
import requests
from bs4 import BeautifulSoup
import re

# Read the Excel file into a DataFrame
excel_file = 'your_excel_file.xlsx'  # Replace with your Excel file path
df = pd.read_excel(excel_file)

# Define a function to extract currencies from a news website
def get_currencies(country_name):
    url = f"https://www.google.com/search?q={country_name}+currency"
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')
        currency_info = soup.find("div", class_="BNeawe iBp4i AP7Wnd").text
        return currency_info
    return "Currency information not found"

# Iterate through the DataFrame and perform the search
currencies = []

for word in df['Column1']:  # Replace 'Column1' with the actual column name
    if re.search(r'\b\w+\b', word):
        country_name = re.search(r'\b\w+\b', word).group()
        currency_info = get_currencies(country_name)
        currencies.append(f"{country_name}: {currency_info}")
    else:
        currencies.append("Country name not found")

# Add the currencies to the DataFrame
df['Currencies'] = currencies

# Save the updated DataFrame to a new Excel file
output_excel_file = 'output_currencies.xlsx'
df.to_excel(output_excel_file, index=False)

print(f"Result saved to {output_excel_file}")






import win32com.client
from datetime import datetime
import openpyxl

# Create a new Excel workbook
workbook = openpyxl.Workbook()
sheet = workbook.active
sheet['A1'] = 'Index ID'
sheet['B1'] = 'Categorization Status'

# Connect to Outlook
outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
inbox = outlook.GetDefaultFolder(6)  # 6 represents the Inbox folder

# Get the current date
today = datetime.now().date()

# Iterate through the emails in the Inbox
row_num = 2  # Start from the second row
for message in inbox.Items:
    # Check if the email was received today
    received_date = message.ReceivedTime.date()
    if received_date == today:
        # Get the index ID and categorization status
        index_id = message.EntryID
        categorization_status = "Categorized" if message.Categories else "Not Categorized"
        
        # Write data to Excel
        sheet.cell(row=row_num, column=1, value=index_id)
        sheet.cell(row=row_num, column=2, value=categorization_status)
        row_num += 1

# Save the Excel file
workbook.save('OutlookEmails.xlsx')

print('Data has been written to OutlookEmails.xlsx')

